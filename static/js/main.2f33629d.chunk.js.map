{"version":3,"sources":["Components/header.js","Components/context/AppReducer.js","Components/context/MainContext.js","Components/balance.js","Components/income_expense.js","Components/addtransaction.js","Components/Transaction.js","Components/Listtransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","MainProvider","props","useReducer","AppReducer","dispatch","Provider","value","deletedTransaction","addText","addAmount","children","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpense","amounts","income","expense","className","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","Transaction","sign","abs","onClick","TransactionList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f33629d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h2>Our Track Expenser</h2>;\r\n};\r\n\r\nexport default Header;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETED_TRANSANCTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TEXT\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    case \"ADD_AMOUNT\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n//reducer app\r\n\r\nconst initialState = {\r\n  transactions: [\r\n    { id: 1, text: \"Example Of Transaccion\", amount: 20 },\r\n    // { id: 2, text: \"Salary\", amount: 300 },\r\n    // { id: 3, text: \"Book\", amount: -10 },\r\n    // { id: 4, text: \"Camera\", amount: 150 },\r\n  ],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const MainProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  function deletedTransaction(id) {\r\n    dispatch({\r\n      type: \"DELETED_TRANSANCTION\",\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addText(transactions) {\r\n    dispatch({\r\n      type: \"ADD_TEXT\",\r\n      payload: transactions,\r\n    });\r\n  }\r\n\r\n  function addAmount(transactions) {\r\n    dispatch({\r\n      type: \"ADD_AMOUNT\",\r\n      payload: transactions,\r\n    });\r\n  }\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deletedTransaction,\r\n        addText,\r\n        addAmount,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MainProvider;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { GlobalContext } from \"./context/MainContext\";\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(0);\r\n  return (\r\n    <div>\r\n      <h4>Your Balance is :</h4>\r\n      <h1>{total}$</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { GlobalContext } from \"./context/MainContext\";\r\n\r\nconst IncomeExpense = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(1);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(1);\r\n  return (\r\n    <div>\r\n      <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className=\"money minus\">{expense}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpense;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { GlobalContext } from \"./context/MainContext\";\r\n\r\nconst Balance = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const { addText } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n\r\n    addText(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Write it down!\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">Add you Income or your Expense's :</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"How much is it?\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Let it go! =)</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { GlobalContext } from \"./context/MainContext\";\r\n\r\nexport const Transaction = ({ transactions }) => {\r\n  //delete transalacction function from maincontext\r\n  const { deletedTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transactions.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <li className={transactions.amount < 0 ? \"minus\" : \"plus\"}>\r\n      <ul> {transactions.text}</ul>\r\n      <span>\r\n        {sign}${Math.abs(transactions.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deletedTransaction(transactions.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        xx\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { GlobalContext } from \"./context/MainContext\";\r\n\r\nimport { Transaction } from \"./Transaction\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transactions) => (\r\n          <Transaction key={transactions.id} transactions={transactions} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React from \"react\";\n\n//components!\nimport Header from \"./Components/header\";\nimport Balance from \"./Components/balance\";\nimport IncomeExpense from \"./Components/income_expense\";\nimport AddTran from \"./Components/addtransaction\";\nimport Transaction from \"./Components/Listtransaction\";\n\n//mainprovider\n\nimport GlobalProvider from \"./Components/context/MainContext\";\n\nimport \"../src/App.css\";\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense />\n        <Transaction />\n        <AddTran />\n      </div>\n    </GlobalProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}